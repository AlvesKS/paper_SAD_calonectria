[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About this repository",
    "section": "",
    "text": "This repository contains the codes used to obtain and analyze the data used on a research study. Read about the study.\nThe codes used here were written using R version 4.0.3 and scripted on Quarto (.qmd) documents. Follow instruction on the Get Started page of the Quarto website to run the scripts included in this repository.\n\n\n\n\n\n\nReseach compendium\n\n\n\nThe full research compendium with data and scripts used for this study is stored in an Open Science Framework repository and can be accessed here. Download the full repository and run the analysis in your machine."
  },
  {
    "objectID": "index.html#meta",
    "href": "index.html#meta",
    "title": "About this repository",
    "section": "Meta",
    "text": "Meta\n\nLicensing\nCode: MIT year: 2022, copyright holder: Kaique S. Alves\n\n\nRepository maintainer\nKaique S. Alves\n\nD.Sc candidate in the Plant Pathology graduate program from Universidade Federal de Viçosa in Brazil.\nVisiting Scholar in the EVADE program of the Plant Pathology & Plant-Microbe Biology Section, School of Integrative Plant Science, Cornell University.\n\nPersonal website | GitHub | Google Scholar"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About the study",
    "section": "",
    "text": "Marcia F. Queiroz1†, Kaique S. Alves1†, Willian Marlon de Oliveira1, Camila F. Paixão1, Rafael F. Alfenas1, Emerson M. Del Ponte1, Acelino C. Alfenas1*\n\n1Departamento de Fitopatologia, Universidade Federal de Viçosa, 36570-900, Viçosa, MG, Brazil\n*Correspondence author: Acelino C. Alfenas\nEmail: aalfenas@ufv.br\n† These authors contributed equally to this study\n\n\n\ncoming soon…"
  },
  {
    "objectID": "about.html#original-article",
    "href": "about.html#original-article",
    "title": "About the study",
    "section": "Original article",
    "text": "Original article\n\n\n\n\n\n\nThis repository contains the data and code for our article:\n\n\n\nQueiroz, M.F., Alves, K.S., de Oliveira, W.M., Paixão, C.F., Alfenas, R.F., Del Ponte, E.M., Alfenas, A.C. (YYYY) Effect of Rater Training and Standard Area Diagram Structure on the Accuracy of Estimates of Severity in Calonectria Leaf Blight. Name of journal. https://doi.org/xxx/xxx"
  },
  {
    "objectID": "about.html#pre-print",
    "href": "about.html#pre-print",
    "title": "About the study",
    "section": "Pre-print",
    "text": "Pre-print\n\n\n\n\n\n\nOur preprint is online on the OSF preprint server:\n\n\n\nQueiroz, M.F., Alves, K.S., de Oliveira, W.M., Paixão, C.F., Alfenas, R.F., Del Ponte, E.M., Alfenas, A.C. (2022) Effect of Rater Training and Standard Area Diagram Structure on the Accuracy of Estimates of Severity in Calonectria Leaf Blight. OSF, Accessed 24 May 2022. Online at https://doi.org/xxx/xxx"
  },
  {
    "objectID": "about.html#research-compendium",
    "href": "about.html#research-compendium",
    "title": "About the study",
    "section": "Research compendium",
    "text": "Research compendium\n\n\n\n\n\n\nPlease cite this research compendium as:\n\n\n\nAlves, K. S., Queiroz, M. F., de Oliveira, W. M., Paixão, C. F., Alfenas, R. F., Del Ponte, E. M., & Alfenas, A. C. (2022, May 11). Research Compendium: Effect of Rater Training and Standard Area Diagram Structure on the Accuracy of Estimates of Severity in Calonectria Leaf Blight. https://doi.org/10.17605/OSF.IO/WZ3JE"
  },
  {
    "objectID": "validation_calo.html",
    "href": "validation_calo.html",
    "title": "Data analysis",
    "section": "",
    "text": "About R packages\n\n\n\nMake sure to have all R packages installed before running the analysis described in this website.\n\n\n\nlibrary(tidyverse)\nlibrary(DescTools)\nlibrary(ggthemes)\nlibrary(lemon)\nlibrary(cowplot)\nlibrary(lme4)\nlibrary(lmerTest)\nlibrary(emmeans)\nlibrary(multcomp)\nlibrary(patchwork)\nlibrary(epiR)\nlibrary(irr)\nlibrary(ggdist)"
  },
  {
    "objectID": "validation_calo.html#loading-dataset",
    "href": "validation_calo.html#loading-dataset",
    "title": "Data analysis",
    "section": "Loading dataset",
    "text": "Loading dataset\n\nall_data = read.csv(\"data/wrangled_data.csv\") %>% \n  mutate(rater = as.factor(rater))%>% \n  mutate(aid = factor(aid, levels = c(\"Unaided no-training\",\"Unaided after-training\",\"SAD-aided\")))"
  },
  {
    "objectID": "validation_calo.html#exploratory-analysis",
    "href": "validation_calo.html#exploratory-analysis",
    "title": "Data analysis",
    "section": "Exploratory analysis",
    "text": "Exploratory analysis\n\nNumber of raters\n\n\nNumber of leaves\n\n\nSeverity distribution\n\n\nAgreement\n\nall_data %>% \n  ggplot(aes(actual, estimate))+\n  geom_point(color  =\"gray\")+\n  geom_abline(intercept = 0, slope = 1, color =\"red\")+\n  # geom_smooth(color = \"black\", aes(group = rater), se = F)+\n  facet_grid(sad_structure~aid)+\n  coord_equal()+\n  xlim(0,100)+\n  theme_minimal()\n\n\n\n\n\n\nError of severity estimates\n\nall_data %>% \n  mutate(error = estimate-actual) %>% \n  group_by(sad_structure, aid) %>% \n  summarise(mean(error),\n            sd(error)) %>% \n  as.data.frame()\n\n`summarise()` has grouped output by 'sad_structure'. You can override using the `.groups` argument.\n\n\n\n  \n\n\n\n\n\nVisualizing error\n\nall_data %>% \n  ggplot(aes(actual, estimate-actual, color = aid))+\n  geom_point(color  =\"gray80\")+\n  geom_hline(yintercept = 0, color =\"black\", linetype = \"dashed\")+\n  geom_smooth(se = F, method = \"loess\")+\n  facet_rep_grid(sad_structure~aid)+\n  xlim(0,100)+\n  scale_color_colorblind()+\n  theme_half_open(font_size = 10)+\n  # theme_minimal_hgrid(font_size = 10)+\n  labs(x = \"Actual severity (%)\",\n       y = \"Absolute error\")+\n  theme(legend.position = \"none\",\n        strip.background = element_blank())\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\nggsave(\"figs/errors.png\", dpi = 600, height = 4, width = 6, bg = \"white\")\n\n`geom_smooth()` using formula 'y ~ x'"
  },
  {
    "objectID": "validation_calo.html#calculating-accuracy-statistics",
    "href": "validation_calo.html#calculating-accuracy-statistics",
    "title": "Data analysis",
    "section": "Calculating accuracy statistics",
    "text": "Calculating accuracy statistics\n\nstats_data = all_data %>% \n  group_by(aid, rater, sad_structure) %>% \n  summarise(ccc = CCC(estimate, actual)$rho.c$est,\n            r = cor(estimate, actual),\n            cb = CCC(estimate, actual)$C.b,\n            ccc_lower = CCC(estimate, actual)$rho.c$lwr.ci,\n            ccc_upper = CCC(estimate, actual)$rho.c$upr.ci,\n            s.shift = CCC(estimate, actual)$s.shift,\n            l.shift = CCC(estimate, actual)$l.shift) %>% \n  # filter(aid == \"Unaided After-Training\") %>% \n  arrange(-ccc)\n\n`summarise()` has grouped output by 'aid', 'rater'. You can override using the `.groups` argument.\n\nas.data.frame(stats_data)\n\n\n  \n\n\n# Saving the stats to use in the over time accuracy analysis\nwrite.csv(stats_data, \"data/stats_first_three_rounds.csv\", row.names = F)"
  },
  {
    "objectID": "validation_calo.html#modeling",
    "href": "validation_calo.html#modeling",
    "title": "Data analysis",
    "section": "Modeling",
    "text": "Modeling\n\nOverall accuracy\n\nmix_ccc =  lmer(ccc ~ aid*sad_structure + (1|rater),\n                            data =stats_data)\nsummary(mix_ccc)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: ccc ~ aid * sad_structure + (1 | rater)\n   Data: stats_data\n\nREML criterion at convergence: -543.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.3994 -0.3846  0.3193  0.6108  1.5339 \n\nRandom effects:\n Groups   Name        Variance  Std.Dev.\n rater    (Intercept) 3.056e-05 0.005528\n Residual             5.769e-04 0.024019\nNumber of obs: 129, groups:  rater, 43\n\nFixed effects:\n                                                Estimate Std. Error         df\n(Intercept)                                     0.938860   0.005378 122.380727\naidUnaided after-training                       0.010163   0.007413  81.999999\naidSAD-aided                                    0.027573   0.007413  81.999999\nsad_structureLinear                            -0.003714   0.007519 122.380727\naidUnaided after-training:sad_structureLinear   0.006500   0.010363  81.999999\naidSAD-aided:sad_structureLinear               -0.002303   0.010363  81.999999\n                                              t value Pr(>|t|)    \n(Intercept)                                   174.559  < 2e-16 ***\naidUnaided after-training                       1.371 0.174095    \naidSAD-aided                                    3.720 0.000364 ***\nsad_structureLinear                            -0.494 0.622233    \naidUnaided after-training:sad_structureLinear   0.627 0.532268    \naidSAD-aided:sad_structureLinear               -0.222 0.824680    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) adUaf- adSAD- sd_stL aUa-:_\nadUnddaftr- -0.689                            \naidSAD-aidd -0.689  0.500                     \nsd_strctrLn -0.715  0.493  0.493              \nadUaftr-:_L  0.493 -0.715 -0.358 -0.689       \nadSAD-dd:_L  0.493 -0.358 -0.715 -0.689  0.500\n\ncar::Anova(mix_ccc)\n\n\n  \n\n\n\n\nTukey-test\n\nRounds by SAD structure ::: {.cell}\n\nem_ccc1 = emmeans(mix_ccc, \"aid\", by = \"sad_structure\", type = \"response\")\ncld_acc = as.data.frame( cld(em_ccc1, Letters = letters) )\ncld(em_ccc1, Letters = letters)\n\n\n  \n\n\n:::\n\nSAD structure by rounds\n\n\nem_ccc2 = emmeans(mix_ccc,\"sad_structure\" , by =\"aid\", type = \"response\" )\ncld(em_ccc2, Letters = LETTERS)\n\n\n  \n\n\n\n\n\nPlot\n\nas.data.frame(em_ccc2) %>% \n  ggplot(aes(aid, emmean, color = sad_structure))+\n  \n  geom_point(data = stats_data,\n             aes(aid, ccc, fill = sad_structure),\n             position = position_jitterdodge(jitter.width = 0.05, dodge.width = 0.3),\n             color = \"gray90\")+\n  \n  geom_point(position = position_dodge(width = .3),\n             size =3)+\n  geom_errorbar(aes(ymin= lower.CL, ymax = upper.CL),\n                position = position_dodge(width = .3),\n                width = 0,\n                size =1)+\n  geom_text(data = cld_acc, aes(aid,emmean, label = .group),\n            position = position_dodge(width = 0.3),\n            hjust = -1.2, fontface= \"bold\",\n            show.legend  = F )+\n  scale_color_colorblind()+\n  labs(x = \"\",\n       y = \"Overall accuracy (CCC)\",\n       color =\"\",\n       fill = \"\")+\n  theme_half_open()+\n  scale_y_continuous(breaks = seq(0.8,1,by = 0.04),\n                     limits = c(0.85,1))+\n  theme(legend.position = \"top\",\n        # axis.text.x = element_text(angle = 45, hjust = 1)\n        )+\n  scale_x_discrete(limits = c(\"SAD-aided\", \"Unaided after-training\", \"Unaided no-training\"))+\n  coord_flip()\n\n\n\nggsave(\"figs/overall_ccc.png\", dpi = 600, height = 3.5,width =6, bg = \"white\")\n\n\n\n\nPrecision\n\nmix_r =  lmer(r ~ aid*sad_structure+(1|rater),\n                            data =stats_data)\n\nsummary(mix_r)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: r ~ aid * sad_structure + (1 | rater)\n   Data: stats_data\n\nREML criterion at convergence: -626.9\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.4853 -0.2616  0.2422  0.5868  1.2974 \n\nRandom effects:\n Groups   Name        Variance  Std.Dev.\n rater    (Intercept) 4.025e-05 0.006344\n Residual             2.728e-04 0.016516\nNumber of obs: 129, groups:  rater, 43\n\nFixed effects:\n                                                Estimate Std. Error         df\n(Intercept)                                    9.546e-01  3.861e-03  1.191e+02\naidUnaided after-training                      8.057e-03  5.097e-03  8.200e+01\naidSAD-aided                                   1.754e-02  5.097e-03  8.200e+01\nsad_structureLinear                            8.255e-04  5.398e-03  1.191e+02\naidUnaided after-training:sad_structureLinear  7.826e-03  7.126e-03  8.200e+01\naidSAD-aided:sad_structureLinear              -6.493e-03  7.126e-03  8.200e+01\n                                              t value Pr(>|t|)    \n(Intercept)                                   247.243  < 2e-16 ***\naidUnaided after-training                       1.581 0.117802    \naidSAD-aided                                    3.441 0.000915 ***\nsad_structureLinear                             0.153 0.878714    \naidUnaided after-training:sad_structureLinear   1.098 0.275290    \naidSAD-aided:sad_structureLinear               -0.911 0.364846    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) adUaf- adSAD- sd_stL aUa-:_\nadUnddaftr- -0.660                            \naidSAD-aidd -0.660  0.500                     \nsd_strctrLn -0.715  0.472  0.472              \nadUaftr-:_L  0.472 -0.715 -0.358 -0.660       \nadSAD-dd:_L  0.472 -0.358 -0.715 -0.660  0.500\n\ncar::Anova(mix_r)\n\n\n  \n\n\n\n\nTukey-test\n\nRounds by SAD structure\n\n\nem_r1 = emmeans(mix_r, \"aid\", by = \"sad_structure\", type = \"response\")\ncld(em_r1, Letters = letters)\n\n\n  \n\n\n\n\nSAD structure by rounds\n\n\nem_r2 = emmeans(mix_r,\"sad_structure\" , by =\"aid\", type = \"response\" )\ncld(em_r2, Letters = LETTERS)\n\n\n  \n\n\n\n\n\n\nBias Correction factor\n\n# mix_cb =  lmer(cb ~ aid*sad_structure+(1|rater),\n#                             data =stats_data)\nmix_cb =  glmmTMB::glmmTMB(cb ~ aid*sad_structure+(1|rater),\n                            family=list(family=\"beta\",link=\"logit\"),\n                            data =stats_data)\nsummary(mix_cb)\n\n Family: beta  ( logit )\nFormula:          cb ~ aid * sad_structure + (1 | rater)\nData: stats_data\n\n     AIC      BIC   logLik deviance df.resid \n  -849.5   -826.6    432.7   -865.5      121 \n\nRandom effects:\n\nConditional model:\n Groups Name        Variance Std.Dev.\n rater  (Intercept) 0.009815 0.09907 \nNumber of obs: 129, groups:  rater, 43\n\nDispersion parameter for beta family (): 82.3 \n\nConditional model:\n                                              Estimate Std. Error z value\n(Intercept)                                     4.3775     0.1823  24.018\naidUnaided after-training                      -0.1571     0.2382  -0.659\naidSAD-aided                                    0.3653     0.2579   1.416\nsad_structureLinear                            -0.4966     0.2267  -2.191\naidUnaided after-training:sad_structureLinear   0.1872     0.3147   0.595\naidSAD-aided:sad_structureLinear                0.4892     0.3445   1.420\n                                              Pr(>|z|)    \n(Intercept)                                     <2e-16 ***\naidUnaided after-training                       0.5097    \naidSAD-aided                                    0.1567    \nsad_structureLinear                             0.0285 *  \naidUnaided after-training:sad_structureLinear   0.5520    \naidSAD-aided:sad_structureLinear                0.1555    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\ncar::Anova(mix_cb)\n\n\n  \n\n\n\n\nTukey-test\n\nRounds by SAD structure\n\n\nem_cb1 = emmeans(mix_cb, \"aid\", by = \"sad_structure\", type = \"response\")\ncld(em_cb1, Letters = letters)\n\n\n  \n\n\n\n\nSAD structure by rounds\n\n\nem_cb2 = emmeans(mix_cb,\"sad_structure\" , by =\"aid\", type = \"response\" )\ncld(em_cb2, Letters = LETTERS)\n\n\n  \n\n\n\n\n\n\nLocation shift\n\nmix_l.shift =  lmer(l.shift ~ aid*sad_structure+(1|rater),\n                            data =stats_data)\nsummary(mix_l.shift)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: l.shift ~ aid * sad_structure + (1 | rater)\n   Data: stats_data\n\nREML criterion at convergence: -146.1\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.81614 -0.49484 -0.02702  0.67441  2.00504 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n rater    (Intercept) 0.007296 0.08542 \n Residual             0.010579 0.10285 \nNumber of obs: 129, groups:  rater, 43\n\nFixed effects:\n                                              Estimate Std. Error       df\n(Intercept)                                    0.01844    0.02918 92.25837\naidUnaided after-training                     -0.07017    0.03174 82.00000\naidSAD-aided                                   0.01892    0.03174 82.00000\nsad_structureLinear                            0.09681    0.04079 92.25837\naidUnaided after-training:sad_structureLinear  0.01264    0.04438 82.00000\naidSAD-aided:sad_structureLinear              -0.16465    0.04438 82.00000\n                                              t value Pr(>|t|)    \n(Intercept)                                     0.632 0.528874    \naidUnaided after-training                      -2.211 0.029840 *  \naidSAD-aided                                    0.596 0.552676    \nsad_structureLinear                             2.374 0.019691 *  \naidUnaided after-training:sad_structureLinear   0.285 0.776521    \naidSAD-aided:sad_structureLinear               -3.710 0.000376 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) adUaf- adSAD- sd_stL aUa-:_\nadUnddaftr- -0.544                            \naidSAD-aidd -0.544  0.500                     \nsd_strctrLn -0.715  0.389  0.389              \nadUaftr-:_L  0.389 -0.715 -0.358 -0.544       \nadSAD-dd:_L  0.389 -0.358 -0.715 -0.544  0.500\n\ncar::Anova(mix_l.shift)\n\n\n  \n\n\n\n\nTukey-test\n\nRounds by SAD structure\n\n\nem_l.shift1 = emmeans(mix_l.shift, \"aid\", by = \"sad_structure\", type = \"response\")\ncld(em_l.shift1, Letters = letters)\n\n\n  \n\n\n\n\nSAD structure by rounds\n\n\nem_l.shift2 = emmeans(mix_l.shift,\"sad_structure\" , by =\"aid\", type = \"response\" )\ncld(em_l.shift2, Letters = LETTERS)\n\n\n  \n\n\n\n\n\n\nScale shift\n\nmix_s.shift =  lmer(s.shift ~ aid*sad_structure+(1|rater),\n                            data =stats_data)\nsummary(mix_s.shift)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: s.shift ~ aid * sad_structure + (1 | rater)\n   Data: stats_data\n\nREML criterion at convergence: -312.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.0741 -0.5703 -0.0303  0.3972  2.5560 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n rater    (Intercept) 0.001550 0.03937 \n Residual             0.002878 0.05364 \nNumber of obs: 129, groups:  rater, 43\n\nFixed effects:\n                                               Estimate Std. Error        df\n(Intercept)                                    1.063989   0.014520 98.789158\naidUnaided after-training                     -0.015343   0.016555 82.000000\naidSAD-aided                                  -0.021877   0.016555 82.000000\nsad_structureLinear                            0.044884   0.020300 98.789158\naidUnaided after-training:sad_structureLinear -0.002368   0.023144 82.000000\naidSAD-aided:sad_structureLinear              -0.024125   0.023144 82.000000\n                                              t value Pr(>|t|)    \n(Intercept)                                    73.277   <2e-16 ***\naidUnaided after-training                      -0.927   0.3567    \naidSAD-aided                                   -1.321   0.1900    \nsad_structureLinear                             2.211   0.0293 *  \naidUnaided after-training:sad_structureLinear  -0.102   0.9188    \naidSAD-aided:sad_structureLinear               -1.042   0.3003    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) adUaf- adSAD- sd_stL aUa-:_\nadUnddaftr- -0.570                            \naidSAD-aidd -0.570  0.500                     \nsd_strctrLn -0.715  0.408  0.408              \nadUaftr-:_L  0.408 -0.715 -0.358 -0.570       \nadSAD-dd:_L  0.408 -0.358 -0.715 -0.570  0.500\n\ncar::Anova(mix_s.shift)\n\n\n  \n\n\n\n\nTukey-test\n\nRounds by SAD structure\n\n\nem_s.shift1 = emmeans(mix_s.shift, \"aid\", by = \"sad_structure\", type = \"response\")\ncld(em_s.shift1, Letters = letters)\n\n\n  \n\n\n\n\nSAD structure by rounds\n\n\nem_s.shift2 = emmeans(mix_s.shift,\"sad_structure\" , by =\"aid\", type = \"response\" )\ncld(em_s.shift2, Letters = LETTERS)\n\n\n  \n\n\n\n\n\n\nGain in accuracy\n\nUnaided no-training to SAD-aided\n\ng1_slope = stats_data %>% \n  dplyr::select(rater, sad_structure, ccc, aid) %>% \n  pivot_wider(values_from = ccc,\n              names_from = aid) %>% \n  mutate(slope1 =`SAD-aided`- `Unaided no-training`) %>% \n  ggplot(aes(`Unaided no-training`,slope1,fill= slope1, label = rater ))+\n  geom_hline(yintercept = 0)+\n  geom_point(size =2.5, shape = 21)+\n  # geom_text(size = 2)+\n  scale_fill_viridis_c(option =\"B\", limits =c(-0.1, 0.12))+\n  theme_minimal_hgrid(font_size = 12)+\n  labs(subtitle = expression(\"Unaided no-training \"%->%\" SAD-aided\"),\n       y = \"Gain in accuracy\")+\n  facet_rep_wrap(~sad_structure, nrow =1)\ng1_slope\n\n\n\n\n\n\nUnaided after-training to SAD-aided\n\ng2_slope = stats_data %>% \n  dplyr::select(rater, sad_structure, ccc, aid) %>% \n  pivot_wider(values_from = ccc,\n              names_from = aid) %>% \n  mutate(slope1 = `SAD-aided` - `Unaided after-training`) %>% \n  ggplot(aes(`Unaided after-training`,slope1, fill = slope1 ))+\n  geom_hline(yintercept = 0)+\n  geom_point(size =2.5, shape = 21)+\n  scale_fill_viridis_c(option =\"B\", limits =c(-0.1, 0.12))+\n  theme_minimal_hgrid(font_size = 12)+\n  labs(subtitle = expression(\"Unaided after-training \"%->%\" SAD-aided\"),\n       y = \"Gain in accuracy\")+\n  facet_rep_wrap(~sad_structure, nrow =1)\ng2_slope\n\n\n\n\n\n\nUnaided no-training to Unaided after-training\n\ng3_slope = stats_data %>% \n  dplyr::select(rater, sad_structure, ccc, aid) %>% \n  pivot_wider(values_from = ccc,\n              names_from = aid) %>% \n  mutate(slope1 =`Unaided after-training`- `Unaided no-training`) %>% \n  ggplot(aes(`Unaided no-training`,slope1, fill = slope1 ))+\n  geom_hline(yintercept = 0)+\n  geom_point(size =2.5, shape =21)+\n  scale_fill_viridis_c(option =\"B\", limits =c(-0.1, 0.12))+\n  theme_minimal_hgrid(font_size = 12)+\n  labs(#subtitle = \"Un. after-training - Un. no-training\",\n       subtitle = expression(\"Unaided no-training \"%->%\" Unaided after-training\"),\n       y = \"Gain in accuracy\")+\n  facet_rep_wrap(~sad_structure, nrow =1)\ng3_slope\n\n\n\n# \"Un. after-training \\u2192 Un. no-training)\"\"\\u2192\"\n\n\n\nFigure\n\ng1_slope+g2_slope+g3_slope+\n  plot_annotation(tag_levels = \"A\")+\n  plot_layout(guides = \"collect\", ncol = 1)&\n  scale_x_continuous(limits = c(0.85, 1))&\n  theme_half_open(font_size = 12)&\n  # background_grid()&\n  scale_y_continuous(limits = c(-0.1, 0.12))&\n  theme(plot.subtitle = element_text(face = \"bold\"),\n        legend.position = \"none\",\n        strip.text = element_text(hjust = 0, size =10),\n        strip.background = element_blank()\n        )\n\n\n\nggsave(\"figs/slope.png\",dpi = 600, height = 8, width = 7, bg = \"white\")"
  },
  {
    "objectID": "validation_calo.html#interrater-reliability",
    "href": "validation_calo.html#interrater-reliability",
    "title": "Data analysis",
    "section": "Interrater reliability",
    "text": "Interrater reliability\n\nOverall concordance coefficient\n\nsads = unique(all_data$sad_structure)\naid_step = unique(all_data$aid)\nbox_occc = NULL\nfor(i in 1:length(sads)){\nfor(j in 1:length(aid_step)){\noccc_df = all_data %>%\n  filter(sad_structure == sads[i],\n         aid == aid_step[j]) %>% \n  dplyr::select(leaf, rater, estimate) %>% \n  spread(rater, estimate, 2:3) %>%  \n  epi.occc(na.rm = FALSE, pairs = TRUE) \n\noccc_lil = data.frame(sad_structure = sads[i],\n                      aid = aid_step[j],\n                        occc = occc_df$occc,\n                      precision = occc_df$oprec,\n                      accuracy = occc_df$oaccu)\n\nbox_occc = bind_rows(box_occc, occc_lil)\n}\n}\nbox_occc\n\n\n  \n\n\n\n\n\nIntra-class correlation coefficient\n\nsads = unique(all_data$sad_structure)\naid_step = unique(all_data$aid)\nbox_icc = NULL\nfor(i in 1:length(sads)){\nfor(j in 1:length(aid_step)){\niccc_df = all_data %>%\n  filter(sad_structure == sads[i],\n         aid == aid_step[j]) %>% \n  dplyr::select(leaf, rater, estimate) %>% \n  spread(rater, estimate, 2:3) %>%  \n  icc(model = \"twoway\", unit = \"single\", type = \"agreement\") \n\nicc_lil = data.frame(sad_structure = sads[i],\n                      aid = aid_step[j],\n                        icc = iccc_df$value,\n                      lower = iccc_df$lbound,\n                      upper = iccc_df$ubound)\n\nbox_icc = bind_rows(box_icc, icc_lil)\n}\n}\nbox_icc"
  },
  {
    "objectID": "window_based_calo.html",
    "href": "window_based_calo.html",
    "title": "Window-based accuracy",
    "section": "",
    "text": "About R packages\n\n\n\nMake sure to have all R packages installed before running the analysis described in this website.\n\n\n\nlibrary(tidyverse)\nlibrary(DescTools)\nlibrary(ggthemes)\nlibrary(lemon)\nlibrary(cowplot)\nlibrary(lme4)\nlibrary(lmerTest)\nlibrary(emmeans)\nlibrary(multcomp)\nlibrary(patchwork)\nlibrary(epiR)\nlibrary(irr)\nlibrary(ggdist)\n\n\n\n\nall_data = read.csv(\"data/wrangled_data.csv\") %>% \n  mutate(rater = as.factor(rater))%>% \n  mutate(aid = factor(aid, levels = c(\"Unaided no-training\",\"Unaided after-training\",\"SAD-aided\")))\n\n\n\n\n\nraters = unique(all_data$rater)#i\nsads = unique(all_data$sad_structure)#j\naid_step = unique(all_data$aid)#k\nwind_box = data.frame()\n\ninter = 15\n\nfor(i in seq(0,(100-inter), by = 5) ){\nfor(j in 1:length(raters)){\nfor(k  in 1:length(aid_step)){\nseg = all_data %>%\n  filter(rater == raters[j],\n         aid == aid_step[k],\n         actual >=0+i & actual <=inter+i) \n  \nccc = CCC(seg$actual, seg$estimate)$rho.c$est\nccc_l = CCC(seg$actual, seg$estimate)$rho.c$lwr.ci\nccc_u = CCC(seg$actual, seg$estimate)$rho.c$upr.ci\nCB = CCC(seg$actual, seg$estimate)$C.b\nr = cor(seg$actual, seg$estimate)\n\nlil_box = data.frame(interval= inter+i,\n                     rater = raters[j],\n                     sad_structure = unique(seg$sad_structure),\n                     aid = unique(seg$aid),\n                     ccc,\n                     ccc_l,\n                     ccc_u,\n                     CB,\n                     r)\nwind_box = wind_box %>% \n  bind_rows(lil_box)\n\n}}\n}\n\nas.data.frame(wind_box)\n\n\n  \n\n\n\n\n\n\n\n\nccc_win = wind_box %>% \n  ggplot(aes(interval,ccc, color = aid))+\n  # geom_jitter(color =\"gray80\", width = 0.2)+\n  # geom_smooth(se =F, size =1.2)+\n  stat_summary(fun.data = \"mean_cl_boot\")+\n  stat_summary(fun.data = \"mean_se\", geom = \"line\", size =1)+\n  scale_x_continuous(breaks = seq(inter, 100, by = 10))+\n  scale_color_colorblind()+\n  theme_minimal_hgrid()+\n  facet_rep_wrap(~sad_structure)+\n  theme(legend.position = \"bottom\")+\n  labs(x = \"Upper window boundery\",\n       y = \"Overal accuracy (CCC)\",\n       color = \"\")\nccc_win\n\nWarning: Removed 13 rows containing non-finite values (stat_summary).\n\nWarning: Removed 13 rows containing non-finite values (stat_summary).\n\n\n\n\n# ggsave(\"figs/window.png\",dpi = 600, height = 4, width = 7)\n\n\n\n\n\nr_win = wind_box %>% \n  ggplot(aes(interval,r, color = aid))+\n  # geom_jitter(color =\"gray80\", width = 0.2)+\n  # geom_smooth(se =F, size =1.2)+\n  stat_summary(fun.data = \"mean_cl_boot\")+\n  stat_summary(fun.data = \"mean_se\", geom = \"line\", size =1)+\n  scale_x_continuous(breaks = seq(inter, 100, by = 10))+\n  scale_color_colorblind()+\n  theme_minimal_hgrid()+\n  facet_rep_wrap(~sad_structure)+\n  theme(legend.position = \"bottom\")+\n  labs(x = \"Upper window boundery\",\n       y = \"Precision (r)\",\n       color  = \"\")\nr_win\n\nWarning: Removed 13 rows containing non-finite values (stat_summary).\n\nWarning: Removed 13 rows containing non-finite values (stat_summary).\n\n\n\n\n\n\n\n\n\ncb_win = wind_box %>% \n  ggplot(aes(interval,CB, color = aid))+\n  # geom_jitter(color =\"gray80\", width = 0.2)+\n  # geom_smooth(se =F, size =1.2)+\n  stat_summary(fun.data = \"mean_cl_boot\")+\n  stat_summary(fun.data = \"mean_se\", geom = \"line\", size =1)+\n  scale_x_continuous(breaks = seq(inter, 100, by = 10))+\n  scale_color_colorblind()+\n  theme_minimal_hgrid()+\n  facet_rep_wrap(~sad_structure)+\n  theme(legend.position = \"bottom\")+\n  labs(x = \"Upper window boundery\",\n       y = \"Generalized bias (Cb)\",\n       color =\"\")\ncb_win\n\nWarning: Removed 13 rows containing non-finite values (stat_summary).\n\nWarning: Removed 13 rows containing non-finite values (stat_summary).\n\n\n\n\n\n\n\n\n\n\nccc_win + r_win +cb_win+\n  plot_layout(ncol =1,\n              guides = \"collect\")+\n  plot_annotation(tag_levels = \"A\") &\n  theme_half_open() &\n  theme(legend.position = \"bottom\", \n        strip.background = element_blank())\n\n\n\nggsave(\"figs/window.png\",dpi = 600, height = 10, width = 9, bg = \"white\")"
  },
  {
    "objectID": "over_time_accu_calo.html",
    "href": "over_time_accu_calo.html",
    "title": "Data analysis",
    "section": "",
    "text": "About R packages\n\n\n\nMake sure to have all R packages installed before running the analysis described in this website.\n\n\n\nlibrary(tidyverse)\nlibrary(DescTools)\nlibrary(ggthemes)\nlibrary(lemon)\nlibrary(cowplot)\nlibrary(lme4)\nlibrary(lmerTest)\nlibrary(emmeans)\nlibrary(multcomp)\nlibrary(patchwork)\nlibrary(epiR)\nlibrary(irr)\nlibrary(ggdist)"
  },
  {
    "objectID": "over_time_accu_calo.html#which-raters-were-selected",
    "href": "over_time_accu_calo.html#which-raters-were-selected",
    "title": "Data analysis",
    "section": "which raters were selected?",
    "text": "which raters were selected?\n\nselecter_raters = pt_all_data %>% \n  group_by(rater) %>% \n  summarise(class = unique(class))\nselecter_raters\n\n\n  \n\n\n\n\nAgreement plot\n\npt_all_data %>% \n  ggplot(aes(actual, estimate))+\n  geom_abline(slope = 1,intercept = 0)+\n  geom_point()+\n  geom_smooth(aes(color = class),se = F ,method = 'lm')+\n  facet_grid(sad_structure~time)\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\n\n\nCalculating Stats\n\npt_stats = pt_all_data %>% \n  group_by(rater, sad_structure,time,class) %>%\n  summarise(ccc = CCC(estimate, actual)$rho.c$est,\n            r = cor(estimate, actual),\n            cb = CCC(estimate, actual)$C.b,\n            ccc_lower = CCC(estimate, actual)$rho.c$lwr.ci,\n            ccc_upper = CCC(estimate, actual)$rho.c$upr.ci,\n            s.shift = CCC(estimate, actual)$s.shift,\n            l.shift = CCC(estimate, actual)$l.shift) %>% \n  # filter(aid == \"Unaided After-Training\") %>% \n  arrange(-ccc)\n\n`summarise()` has grouped output by 'rater', 'sad_structure', 'time'. You can override using the `.groups` argument."
  },
  {
    "objectID": "over_time_accu_calo.html#gathering-data",
    "href": "over_time_accu_calo.html#gathering-data",
    "title": "Data analysis",
    "section": "gathering data",
    "text": "gathering data\n\npt_stats2 = pt_stats %>%\n  bind_rows(\nstats_data %>%\n  filter(rater %in% selecter_raters$rater) %>% \n  rename(time = aid)\n) %>%\n  dplyr::select(-class) %>% \n  left_join(selecter_raters, by =\"rater\") %>% \n \n  mutate(time = factor(time, levels = c(\"Unaided no-training\",\n                                        \"Unaided after-training\",\n                                        \"SAD-aided\",\n                                        \"After 07 days\",\n                                        \"After 14 days\")))\n\n\nas.data.frame(pt_stats2)\n\n\n  \n\n\n\n\nCCC over-time\n\nccc_ot = pt_stats2 %>% \n  ggplot(aes(time, ccc,  group = rater, color=class)) +\n  geom_rect(ymin = 0,ymax = 1, xmin = 3.8, xmax = 5.3, fill = \"gray85\", alpha=0.05, color = NA)+\n  geom_errorbar(aes(ymin = ccc_lower, ymax = ccc_upper),\n                width = 0,\n                position = position_dodge(width =0.25)\n                )+\n  geom_line(position = position_dodge(width =0.25), size = 0.5)+\n  geom_point(size=2,\n             position = position_dodge(width =0.25)\n             )+\n  facet_rep_wrap(~sad_structure, ncol= 2)+\n  scale_color_calc(labels = c(\"High inherent accuracy\", \"Low inherent accuracy\"))+\n  theme_half_open(font_size = 12)+\n  background_grid(size.major = 0.1)+\n  theme(axis.text.x = element_text(angle=35, hjust =1),\n        legend.position = \"top\",\n        strip.background = element_blank())+\n  labs(x = \"\",\n       y = \"Overall accuracy (CCC)\",\n       color = \"\")\nccc_ot\n\n\n\nggsave(\"figs/overtime.png\", dpi = 600, height = 4, width = 8, bg = \"white\")"
  }
]